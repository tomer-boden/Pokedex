{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","url","email","id","useState","ime","setIme","type","setType","type2","setType2","ind","setInd","a","fetch","fetched","json","pokemons","sprites","front_default","types","useEffect","fetchPokemon","className","alt","src","CardList","map","user","i","SearchBox","searchChange","place","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","haserror","error","info","this","setState","Component","particlesOptions","particles","number","value","density","enable","value_area","App","setPokemons","searchfield","setSearchField","show","setShow","from","setFrom","then","pokemon","results","filterPokemons","filter","toLowerCase","includes","length","params","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e9756fb.chunk.js","sourcesContent":["import React, {useState,useEffect } from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({name, email, id, url}) => {\r\nconst [ime, setIme] = useState([])\r\nconst [type, setType] = useState([])\r\nconst [type2, setType2] = useState([])\r\nconst [ind, setInd] = useState('')\r\n\r\nasync function fetchPokemon (url) {\r\nconst fetched = await fetch(url)\r\nconst pokemons = await fetched.json()\r\nawait setIme(pokemons.sprites.front_default)\r\nawait setType(pokemons.types[0].type.name)\r\nif (pokemons.types[1])\r\n{\r\n\t{await setType2(\"/\" + pokemons.types[1].type.name)}\r\n}\r\nelse{\r\n\t{await setType2(\"\")}\r\n}\r\nif (pokemons.id < 894)\r\n{await setInd(pokemons.id)}\r\nelse\r\n{\r\n\tawait setInd('special')\r\n}\r\n}\r\n\r\nuseEffect(() => {\r\n\r\nfetchPokemon(url)\r\n\r\n\t})\r\n\r\nreturn (\r\n\t\r\n\t\t<div className='tc dib bg3 pa3 ma2 grow bw2 shadow-5 card'>\r\n\t\t<h2>#{ind} {name}</h2>\r\n\t\t<img alt='photo' src={ime}/>\r\n\t\t<div>\r\n\r\n\t\t</div>\r\n\t\t<p>{type}{type2}</p>\r\n\t\t</div>\r\n\t\r\n\t\t)\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({pokemons}) => {\r\n\treturn(\r\n\t<div>\r\n\t{pokemons.map((user, i) =>{\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\tkey={i} \r\n\t\t\tid={i} \r\n\t\t\tname={user.name} \r\n\t\t\temail=\"lala\"\r\n\t\t\turl={user.url}\r\n\t\t\t/>\r\n\t);\r\n\t})}\r\n    </div>\r\n\t\t);\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange, place}) =>{\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t<input \r\n\t\tclassName ='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder= {place}\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY : 'scroll', border :'1px solid black', height : '500px'}} >\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thaserror : false\r\n\t\t}\r\n\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({haserror:true})\r\n}\r\n\r\nrender () {\r\n\tif (this.state.haserror){\r\n\t\treturn <h1>oops wrong</h1>\r\n\t}\r\n\treturn this.props.children\r\n}\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import './App.css';\nimport React, {Component, useState, useEffect} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Particles from 'react-particles-js';\n\nconst last_pokemon_index=1118\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nfunction App() {\n\tconst [pokemons, setPokemons] = useState([])\n\tconst [searchfield, setSearchField] = useState('')\n\tconst [show, setShow] = useState(0)\n\tconst [from, setFrom] = useState(0)\n\nuseEffect(() => {\n\t\tif (from<=last_pokemon_index)\n\t{\n\tfetch(`https://pokeapi.co/api/v2/pokemon?limit=${show}&offset=${from}`)\n\t.then(pokemons => pokemons.json())\n\t.then(pokemon => \n\t\tsetPokemons(pokemon.results))}\n}, [show, from])\n\nfunction onSearchChange  (event) {\n\tsetSearchField(event.target.value)\n\t}\n\nfunction onStartChange(event){\n\tif(event.target.value)\n\tsetShow(event.target.value);\n\telse\n\tsetShow(0)\n}\n\nfunction onEndChange(event){\n\tif(event.target.value >= 1)\n\tsetFrom(event.target.value -1);\n\telse\n\tsetFrom(0);\n}\n\nconst filterPokemons = pokemons.filter(pokemon => {\n\t\treturn pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\n\n  return !pokemons.length ? \n\t\t\t<h1 className=\"tc\">loading</h1> :\n\t\t(\n\t\t<div className=\"tc\">\n\t\t<Particles className='particles' params={particlesOptions} />\n\t\t<h1>Pokedex</h1>\n\t\t<SearchBox searchChange ={onSearchChange} place = \"search pokemon\"/>\n\t\t<div className=\"box\">\n\t\t<h3>show:</h3>\n\t\t<SearchBox searchChange ={onStartChange} place = \"20\"/>\n\t\t<h3>from:</h3>\n\t\t<SearchBox searchChange ={onEndChange} place = \"1\"/>\n\t\t</div>\n\t\t<Scroll>\n\t\t<ErrorBoundry>\n\t\t{from<=last_pokemon_index\n\t\t\t?\t\n\t\t<CardList pokemons={filterPokemons}/>\n\t\t:\n\t\t<h1 className=\"tc\">no pokemons after that index</h1> \n\t\t}\n\t\t</ErrorBoundry>\n\t\t</Scroll>\n\t\t</div>\n\t\t);\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}